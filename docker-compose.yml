version: '3.8'

services:
  # MongoDB database
  mongodb:
    image: mongo:6.0
    container_name: ai-lecturer-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: ai-lecturer
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - ai-lecturer-network

  # AI Lecturer Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: ai-lecturer-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/ai-lecturer?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      BASE_LECTURE_PROMPT: You are an expert lecturer. Deliver an engaging, informative lecture based on the slide content. Make it conversational and easy to follow.
      MAX_FILE_SIZE: 10485760
      ALLOWED_FILE_TYPES: .pptx,.pdf
    ports:
      - "5000:5000"
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - ai-lecturer-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development version (optional)
  backend-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    container_name: ai-lecturer-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5001
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/ai-lecturer?authSource=admin
      JWT_SECRET: dev-jwt-secret
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      BASE_LECTURE_PROMPT: You are an expert lecturer. Deliver an engaging, informative lecture based on the slide content. Make it conversational and easy to follow.
      MAX_FILE_SIZE: 10485760
      ALLOWED_FILE_TYPES: .pptx,.pdf
    ports:
      - "5001:5001"
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - /app/client/node_modules
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - ai-lecturer-network
    command: npm run dev
    profiles:
      - dev

  # Frontend development server (optional)
  frontend-dev:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: ai-lecturer-frontend-dev
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:5001
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - ai-lecturer-network
    profiles:
      - dev

  # Nginx reverse proxy (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: ai-lecturer-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - ai-lecturer-network
    profiles:
      - production

volumes:
  mongodb_data:
    driver: local

networks:
  ai-lecturer-network:
    driver: bridge
